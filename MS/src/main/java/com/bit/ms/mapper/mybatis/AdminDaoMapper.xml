<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace - 인터페이스에 있는 패키지 명 + 인터페이스 명 -->
<mapper namespace="com.bit.ms.dao.AdminDaoInterface">

	<!-- Admin 회원가입 -->
	<insert id="regAdmin" parameterType="AdminVO">
		insert into admininfo(admin_id, admin_pw, admin_name, admin_phone, admin_birth, store_id)
		values (#{admin_id}, #{admin_pw}, #{admin_name}, #{admin_phone}, #{admin_birth}, #{store_id})
	</insert>

	<!-- Admin 아이디 중복 검사 -->
	<select id="checkOverId" parameterType="String" resultType="int">
		select count(*) from admininfo 
		where admin_id = #{admin_id}
	</select>

	<!-- Admin 로그인 -->
	<select id="loginAdmin" resultType="adminVO">
		select * from admininfo 
		where admin_id = #{admin_id} and store_id = #{store_id}
	</select>

	<!--관리자 정보가져오기 -->
	<select id="getAdminMyage" resultType="adminVO">
		select * from admininfo
		where admin_id = #{admin_id}
	</select>

	<!--관리자가 갖고있는 매장정보 가져오기 -->
	<select id="getStore" resultType="storeVO">
		select * from store 
		where store_id in (select store_id from admininfo where admin_id = #{admin_id})
	</select>

	<!--해당 매장에대한 상세정보 -->
	<select id="getStoreDetail" resultType="storeVO">
		select * from store where
		store_name = #{store_name}
	</select>

	<!--관리자 수정하기 -->
	<update id="editAdmin" parameterType="AdminVO">
		update admininfo 
		set	admin_pw = #{admin_pw}, admin_name = #{admin_name}, admin_phone = #{admin_phone}, admin_birth = #{admin_birth}
		where admin_id = #{admin_id}
	</update>

	<!-- 관리자 삭제하기 -->
	<delete id="deleteAdmin">
		delete from admininfo where admin_id = #{admin_id}
	</delete>

	<!-- 전체 매장리스트 불러오기 -->
	<select id="getStoreList" resultType="storeVO">
		select * from store
	</select>

	<!--매장삭제 -->
	<delete id="deleteStore" parameterType="hashmap">
		delete from admininfo
		where admin_id = #{admin_id} and store_id =
		#{store_id}
	</delete>

	<!-- 회원리스트 출력 -->
	<select id="getUserList" resultType="userVO">
		select * from userinfo
	</select>
	
	<!-- 회원리스트 sorting -->
	<select id="sortingUserList" resultType="userVO">
		select * from userinfo where store_id = #{store_id} order by #{sortName}
		<if test="orderBy == 'desc'">#{orderBy}</if>
		<if test="orderBy == 'asc'">#{orderBy}</if>
	</select>
</mapper>