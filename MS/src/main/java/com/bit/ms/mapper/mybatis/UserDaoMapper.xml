<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace - 인터페이스에 있는 패키지 명 + 인터페이스 명 -->
<mapper namespace="com.bit.ms.dao.UserDaoInterface">
	<!-- 회원가입 -->
	<insert id="regUser" parameterType="userVO">
		insert into userinfo
		(user_id, store_id, user_pw, user_name, user_phone,
		user_birth,
		user_email)
		values (#{user_id}, #{store_id}, #{user_pw}, #{user_name},
		#{user_phone},
		#{user_birth}, #{user_email})
	</insert>
	<!-- 로그인 / 아이디와 스토어id로 찾음 -->
	<select id="loginUser" resultType="userVO">
		select * from userinfo where
		user_id = #{user_id} and store_id = #{store_id}
	</select>
	<!-- 아이디 찾기 -->
	<select id="searchId" resultType="String">
		select ifnull(user_id, 0) from userinfo where user_name = #{user_name} and user_phone = #{user_phone} and store_id = #{search_store}
	</select>
	<!-- 비밀번호 찾기 -->
	<select id="searchPw" parameterType="userVO" resultType="userVO">
		select *
		from user where userid = #{userId}
	</select>
	<!-- 내 정보 얻어오기 -->
	<select id="getMyPage" resultType="userVO">
		select * from userinfo where
		user_id = #{user_id}
	</select>
	<!-- 내 이름 수정 -->
	<update id="editUserName" parameterType="hashmap">
		update userinfo set user_name = #{user_name} where user_id = #{user_id}
	</update>
	<!-- 내 비밀번호 수정 -->
	<update id="editUserPw" parameterType="hashmap">
		update userinfo set user_pw = #{user_pw} where user_id = #{user_id}
	</update>
	<!-- 내 폰번호 수정 -->
	<update id="editUserPhone" parameterType="hashmap">
		update userinfo set user_phone = #{user_phone} where user_id = #{user_id}
	</update>
	<!-- 내 생년월일 수정 -->
	<update id="editUserBirth" parameterType="hashmap">
		update userinfo set user_birth = #{user_birth} where user_id = #{user_id}
	</update>
	<!-- 내 이메일 수정 -->
	<update id="editUserEmail" parameterType="hashmap">
		update userinfo set user_email = #{user_email} where user_id = #{user_id}
	</update>
	<!-- 유저 삭제 -->
	<delete id="deleteUser">
		delete from userinfo where user_id = #{user_id}
	</delete>
	<!-- 아이디 중복 검사 -->
	<select id="checkOverId" parameterType="String" resultType="int">
		select count(*) from userinfo where user_id = #{user_id}
	</select>
	<!-- 전화번호 중복 검사 -->
	<select id="checkOverPhoneNum" resultType="String">
		select userphone from
		user where userphone = #{userPhone}
	</select>
	<!-- 스토어 정보 가져오기 -->
	<select id="getUserStoreVO" parameterType="int"
		resultType="storeVO">
		select * from store where store_id = #{store_id}
	</select>
</mapper>